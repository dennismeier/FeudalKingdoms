install.packages("slidify")
install.packages("KernSmooth")
library(KernSmooth)
?matrix
x<-matrix(c(1,2,3, 11,12,13)
x
x<-matrix(c(4,4,4,4))
x
x<-matrix(c(4,4,4,4),nrow=2,ncol=2)
x
solve(x)
y<-solve(x)
x<-matrix(c(2,2,2,2),nrow=2,ncol=2)
solve<x
solve(x)
x
x<-matrix(c(0,2,2,0),nrow=2,ncol=2)
x
solve(x)
x<-matrix(c(0,4,4,0),nrow=2,ncol=2)
x
solve(x)
source('~/Coursera/Data Scientist/makeCacheMatrix.R')
source('~/Coursera/Data Scientist/makeCacheMatrix.R')
source('~/Coursera/Data Scientist/makeCacheMatrix.R')
source('~/Coursera/Data Scientist/cacheSolve.R')
x<-matrix(c(0,4,4,0),nrow=2,ncol=2)
v<-makeinv()
v<-makeinv
v<-makeinv()
v<-makeCacheMatrix()
source('~/Coursera/Data Scientist/makeCacheMatrix.R')
source('~/Coursera/Data Scientist/makeCacheMatrix.R')
v<-makeCacheMatrix()
v<-makeinv()
source('~/Coursera/Data Scientist/makeVector.R')
source('~/Coursera/Data Scientist/cachemean.R')
v <- makeVector()
v$set(20:40)
v$get()
cachemean(v)
source('~/Coursera/Data Scientist/makeCacheMatrix.R')
source('~/Coursera/Data Scientist/cacheSolve.R')
source('~/Coursera/Data Scientist/makeCacheMatrix.R')
v<-makeInverse()
v$set(20:40)
source('~/Coursera/Data Scientist/makeCacheMatrix.R')
source('~/Coursera/Data Scientist/cacheSolve.R')
m$set( matrix( c(0, 2, 2, 0 ), 2, 2))
source('~/Coursera/Data Scientist/makeCacheMatrix.R')
source('~/Coursera/Data Scientist/cacheSolve.R')
m$set( matrix( c(0, 2, 2, 0 ), 2, 2))
set.seed(1)
rpois(5,2)
?rpois
?qpois
setwd("~/Feudal Kingdoms of America")
source('~/Feudal Kingdoms of America/PowerStates.R')
states<-powerstates()
source('~/Feudal Kingdoms of America/PowerStates.R')
states<-powerstates()
str(states)
source('~/Feudal Kingdoms of America/PowerStates.R')
states<-powerstates()
naicstable<-read.csv("NAICS.csv", header=TRUE)
naics<-naicstable[,"NAICS.id"]
naics<-as.character(naics)
astring<-c("a","b","c","d","e","f","g","h","i","j","k","l")
nastring<-c("a","b","c","d","e","f","g","h","i","j","k","l")
alldata<-read.csv("BP_2012_00A1_with_ann.csv",header=TRUE,na.string=nastring)
mydata<-na.omit(alldata)
head(mydata)
largeco<-mydata[as.integer(mydata$EMP)>499,]
str(largeco)
head(largeco)
str(largeco)
mydata
?head()
head(mydata, n=15)
largeco<-mydata[(as.integer(mydata$EMP)>499),]
head(largeco, n=25)
as.integer(mydata$EMP)>499)
as.integer(mydata$EMP)>499
mydata[25,]
mydata[25,EMP]
mydata[25,mydata$EMP]
mydata[mydata$EMP=122]
mydata[mydata$EMP=122,]
mydata[as.numeric(mydata$EMP=122),]
mydata[as.numeric(mydata$EMP==122),]
mydata[as.numeric(mydata$EMP>=122),]
mydata[as.numeric(mydata$EMP>==216),]
mydata[as.numeric(mydata$EMP==216),]
mydata[as.numeric(mydata$EMP==216),c("GEO.display.label","NAICS.id","NAICS.display.label","EMP")]
mydata[as.numeric(mydata$EMP==216),c("GEO.display.label","NAICS.id","NAICS.display.label","EMP")]
str(mydata)
head(mydata)
mydata[as.numeric(,"EMP"]
mydata[,"EMP"]
str(mydata[,"EMP"])
class(mydata[,EMP])
class(mydata[,"EMP"])
class(as.numeric(mydata[,"EMP"])
class(as.numeric(mydata[,"EMP"])
class(as.numeric(mydata[,"EMP"]))
str(as.numeric(mydata[,"EMP"]))
source('~/Feudal Kingdoms of America/PowerStates.R')
states<-powerstates()
largeco<-mydata[(as.numeric(mydata$EMP)>499),]
head(largeco)
source('~/Feudal Kingdoms of America/PowerStates.R')
states<-powerstates()
source('~/Feudal Kingdoms of America/PowerStates.R')
states<-powerstates()
source('~/Feudal Kingdoms of America/PowerStates.R')
states<-powerstates()
source('~/Feudal Kingdoms of America/PowerStates.R')
states<-powerstates()
head(power)
source('~/Feudal Kingdoms of America/PowerStates.R')
states<-powerstates()
