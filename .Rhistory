install.packages("slidify")
install.packages("KernSmooth")
library(KernSmooth)
?matrix
x<-matrix(c(1,2,3, 11,12,13)
x
x<-matrix(c(4,4,4,4))
x
x<-matrix(c(4,4,4,4),nrow=2,ncol=2)
x
solve(x)
y<-solve(x)
x<-matrix(c(2,2,2,2),nrow=2,ncol=2)
solve<x
solve(x)
x
x<-matrix(c(0,2,2,0),nrow=2,ncol=2)
x
solve(x)
x<-matrix(c(0,4,4,0),nrow=2,ncol=2)
x
solve(x)
source('~/Coursera/Data Scientist/makeCacheMatrix.R')
source('~/Coursera/Data Scientist/makeCacheMatrix.R')
source('~/Coursera/Data Scientist/makeCacheMatrix.R')
source('~/Coursera/Data Scientist/cacheSolve.R')
x<-matrix(c(0,4,4,0),nrow=2,ncol=2)
v<-makeinv()
v<-makeinv
v<-makeinv()
v<-makeCacheMatrix()
source('~/Coursera/Data Scientist/makeCacheMatrix.R')
source('~/Coursera/Data Scientist/makeCacheMatrix.R')
v<-makeCacheMatrix()
v<-makeinv()
source('~/Coursera/Data Scientist/makeVector.R')
source('~/Coursera/Data Scientist/cachemean.R')
v <- makeVector()
v$set(20:40)
v$get()
cachemean(v)
source('~/Coursera/Data Scientist/makeCacheMatrix.R')
source('~/Coursera/Data Scientist/cacheSolve.R')
source('~/Coursera/Data Scientist/makeCacheMatrix.R')
v<-makeInverse()
v$set(20:40)
source('~/Coursera/Data Scientist/makeCacheMatrix.R')
source('~/Coursera/Data Scientist/cacheSolve.R')
m$set( matrix( c(0, 2, 2, 0 ), 2, 2))
source('~/Coursera/Data Scientist/makeCacheMatrix.R')
source('~/Coursera/Data Scientist/cacheSolve.R')
m$set( matrix( c(0, 2, 2, 0 ), 2, 2))
set.seed(1)
rpois(5,2)
?rpois
?qpois
setwd("~/Feudal Kingdoms of America")
load("~/Feudal Kingdoms of America/.RData")
ls()
setwd("~/Feudal Kingdoms of America")
ls()
list()
file()
dir()
source('~/Feudal Kingdoms of America/PowerStates.R')
mydata<-powerstates()
naicstable<-read.csv("NAICS.csv", header=TRUE)
naicstable
naics
source('~/Feudal Kingdoms of America/PowerStates.R')
mydata<-powerstates()
naics
str(naicstable)
naics
mydata
naicstable<-read.csv("NAICS.csv", header=TRUE
naicstable<-read.csv("NAICS.csv", header=TRUE)
naics<-subset(naicstable,select=NAICS.id)
naics
source('~/Feudal Kingdoms of America/PowerStates.R')
mydata<-powerstates()
naicstable<-read.csv("NAICS.csv", header=TRUE)
naics<-subset(naicstable, select=NAICS.id)
naics
str(naics)
as.character(naics)
source('~/Feudal Kingdoms of America/PowerStates.R')
source('~/Feudal Kingdoms of America/PowerStates.R')
source('~/Feudal Kingdoms of America/PowerStates.R')
mydata<-powerstates()
naicstable<-read.csv("NAICS.csv", header=TRUE)
naics<-subset(naicstable, select=NAICS.id)
naics
mydata<-read.csv("BP_2012_00A1_with_ann.csv",header=TRUE)
str(mydata)
as.character(naics)
naics<-as.character(naics)
naics
source('~/Feudal Kingdoms of America/PowerStates.R')
source('~/Feudal Kingdoms of America/PowerStates.R')
mydata<-powerstates()
naics
mydata<-read.csv("BP_2012_00A1_with_ann.csv",header=TRUE)
str(mydata)
power<-subset(mydata,select=c(GEO.display.label,NAICS.id,EMP),subset=(NAICS.id==naics))
str(power)
power
header(mydata)
head(mydata)
naics
power
?subset()
source('~/Feudal Kingdoms of America/PowerStates.R')
source('~/Feudal Kingdoms of America/PowerStates.R')
mydata<-powerstates()
source('~/Feudal Kingdoms of America/PowerStates.R')
mydata<-powerstates()
source('~/Feudal Kingdoms of America/PowerStates.R')
mydata<-powerstates()
source('~/Feudal Kingdoms of America/PowerStates.R')
mydata<-powerstates()
source('~/Feudal Kingdoms of America/PowerStates.R')
mydata<-powerstates()
source('~/Feudal Kingdoms of America/PowerStates.R')
mydata<-powerstates()
?[]
source('~/Feudal Kingdoms of America/PowerStates.R')
source('~/Feudal Kingdoms of America/PowerStates.R')
naicstable<-read.csv("NAICS.csv", header=TRUE)
naics<-subset(naicstable, select=NAICS.id)
naics<-as.character(naics)
mydata<-read.csv("BP_2012_00A1_with_ann.csv",header=TRUE)
power<-mydata[c("GEO.display.label","NAICS.id"==naics,"EMP")]
str(mydata)
power<-mydata[c(GEO.display.label,"NAICS.id"==naics,"EMP")]
power<-mydata["GEO.display.label","NAICS.id"==naics,"EMP"]
power<-mydata["GEO.display.label","NAICS.id"==naics,"EMP"]
names(mydata)
